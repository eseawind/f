<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.f.dao.ext.orders.OrdersMapperExt" >

<insert id="insertOrders" parameterType="com.f.dto.orders.Orders" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
	insert into orders (orderNum, state, 
      status, orderPrice, paidPrice, 
      payPrice, productPrice, discountPrice, 
      balancePrice, isPaid, userId, 
      createtime, merchantId, provinceId, 
      cityId, areaId, provinceName, 
      cityName, areaName, remark, 
      consignee, mobile)
    values (#{orderNum,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{orderPrice,jdbcType=DECIMAL}, #{paidPrice,jdbcType=DECIMAL}, 
      #{payPrice,jdbcType=DECIMAL}, #{productPrice,jdbcType=DECIMAL}, #{discountPrice,jdbcType=DECIMAL}, 
      #{balancePrice,jdbcType=DECIMAL}, #{isPaid,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, 
      now(), #{merchantId,jdbcType=BIGINT}, #{provinceId,jdbcType=INTEGER}, 
      #{cityId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, #{provinceName,jdbcType=VARCHAR}, 
      #{cityName,jdbcType=VARCHAR}, #{areaName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{consignee,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR})
</insert>
<insert id="insertOrderDetail" parameterType="list">
	insert into odetail (orderId, cgoodsId, buyPrice, number, sku) values 
    <foreach collection="list" separator="," item="od">
    (#{od.orderId,jdbcType=BIGINT}, #{od.cgoodsId,jdbcType=BIGINT}, #{od.buyPrice,jdbcType=DECIMAL}, #{od.number,jdbcType=INTEGER}, #{od.sku,jdbcType=VARCHAR})
    </foreach>
</insert>

<insert id="insertOPayType" parameterType="com.f.dto.orders.OPayType">
	insert into opaytype (orderId,code,name,createtime) values (#{orderId,jdbcType=BIGINT},#{code,jdbcType=INTEGER},#{name,jdbcType=VARCHAR},now())
</insert>

<update id="updateCGoodsStock" parameterType="list">
	<foreach collection="list" separator=";" item="cg">
		update cgoods set number = number - #{cg.number,jdbcType=INTEGER} where id = #{cg.cgid,jdbcType=BIGINT}
	</foreach>
</update>

<select id="selectOrders" parameterType="map" resultType="map">
	select o.id, o.orderNum, o.state, o.status, o.orderPrice, o.paidPrice, o.payPrice, o.productPrice, o.discountPrice, 
    o.balancePrice, o.isPaid, o.userId, o.createtime, o.merchantId, o.provinceId, o.cityId, o.areaId, o.payTime,
    o.provinceName, o.cityName, o.areaName, o.remark, o.consignee, o.mobile, op.code as paycode, op.name as payname
	from orders o left join opaytype op on o.id = op.orderId
	<where>
		<if test="orderNum != null">
			and o.orderNum = #{orderNum,jdbcType=VARCHAR}
		</if>
		<if test="userId != null">
			and o.userId = #{userId,jdbcType=BIGINT}
		</if>
		<if test="merchantId != null">
			and o.merchantId = #{merchantId,jdbcType=BIGINT}
		</if>
		<if test="isPaid != null">
			and o.isPaid = #{isPaid,jdbcType=INTEGER}
		</if>
		<if test="state != null">
			and o.state = #{state,jdbcType=INTEGER}
		</if>
		<if test="status != null">
			and o.status = #{status,jdbcType=INTEGER}
		</if>
		<if test="sdate != null">
			<if test="edate != null">
				and o.createtime between #{sdate,jdbcType=TIMESTAMP} and #{edate,jdbcType=TIMESTAMP}
			</if>
		</if>
	</where>
	order by o.id desc
	limit #{start,jdbcType=INTEGER}, #{rows,jdbcType=INTEGER}
</select>

<select id="selectHOrders" parameterType="map" resultType="map">
	select o.id, o.orderNum, o.state, o.status, o.orderPrice, o.paidPrice, o.payPrice, o.productPrice, o.discountPrice, 
    o.balancePrice, o.isPaid, o.userId, o.createtime, o.merchantId, o.provinceId, o.cityId, o.areaId, o.payTime,
    o.provinceName, o.cityName, o.areaName, o.remark, o.consignee, o.mobile, op.code as paycode, op.name as payname,
    m.name as merchantName, u.username
	from orders o left join opaytype op on o.id = op.orderId
	left join merchant m on o.merchantId = m.id
	left join users u on o.userId = u.id
	<where>
		<if test="orderNum != null">
			and o.orderNum = #{orderNum,jdbcType=VARCHAR}
		</if>
		<if test="userId != null">
			and o.userId = #{userId,jdbcType=BIGINT}
		</if>
		<if test="merchantId != null">
			and o.merchantId = #{merchantId,jdbcType=BIGINT}
		</if>
		<if test="isPaid != null">
			and o.isPaid = #{isPaid,jdbcType=INTEGER}
		</if>
		<if test="state != null">
			and o.state = #{state,jdbcType=INTEGER}
		</if>
		<if test="status != null">
			and o.status = #{status,jdbcType=INTEGER}
		</if>
		<if test="sdate != null">
			<if test="edate != null">
				and o.createtime between #{sdate,jdbcType=TIMESTAMP} and #{edate,jdbcType=TIMESTAMP}
			</if>
		</if>
	</where>
	order by o.id desc
	<if test="start != null">
		<if test="rows != null">
			limit #{start,jdbcType=INTEGER}, #{rows,jdbcType=INTEGER}
		</if>
	</if>
</select>

<select id="countOrders" parameterType="map" resultType="long">
	select count(1)
	from orders o
	<where>
		<if test="orderNum != null">
			and o.orderNum = #{orderNum,jdbcType=VARCHAR}
		</if>
		<if test="userId != null">
			and o.userId = #{userId,jdbcType=BIGINT}
		</if>
		<if test="merchantId != null">
			and o.merchantId = #{merchantId,jdbcType=BIGINT}
		</if>
		<if test="isPaid != null">
			and o.isPaid = #{isPaid,jdbcType=INTEGER}
		</if>
		<if test="state != null">
			and o.state = #{state,jdbcType=INTEGER}
		</if>
		<if test="status != null">
			and o.status = #{status,jdbcType=INTEGER}
		</if>
		<if test="sdate != null">
			<if test="edate != null">
				and o.createtime between #{sdate,jdbcType=TIMESTAMP} and #{edate,jdbcType=TIMESTAMP}
			</if>
		</if>
	</where>
</select>

<select id="selectODetailByOrderIds" parameterType="list" resultType="map">
	select od.id, od.orderId, od.cgoodsId, od.buyPrice, od.number, od.sku, g.gname, cg.cgname, cg.photo
	from odetail od left join orders o on od.orderId = o.id 
	left join cgoods cg on od.cgoodsId = cg.id
	left join goods g on cg.gid = g.id
	where od.orderId in 
	<foreach collection="list" item="orderId" open="(" close=")" separator=",">
		#{orderId,jdbcType=BIGINT}
	</foreach>
</select>

<select id="selectODetail" parameterType="map" resultType="map">
	select od.id, od.orderId, od.cgoodsId, od.buyPrice, od.number, od.sku, g.gname, cg.cgname, cg.photo
	from odetail od left join orders o on od.orderId = o.id 
	left join cgoods cg on od.cgoodsId = cg.id
	left join goods g on cg.gid = g.id
	where od.orderId = #{orderId,jdbcType=BIGINT} 
	<if test="userId != null">
		and o.userId = #{userId,jdbcType=BIGINT}
	</if> 
	<if test="merchantId != null">
		and o.merchantId = #{merchantId,jdbcType=BIGINT}
	</if>
</select>

<update id="updateOrders" parameterType="map">
	update orders
	<set>
		<if test="state != null">
			state = #{state,jdbcType=INTEGER},
		</if>
		<if test="status != null">
			status = #{status,jdbcType=INTEGER},
		</if>
		<if test="isPaid != null">
			isPaid = #{isPaid,jdbcType=INTEGER},
		</if>
	</set>
	where id = #{orderId,jdbcType=BIGINT} and state = 1
	<if test="userId != null">
		and userId = #{userId,jdbcType=BIGINT}
	</if>
	<if test="merchantId != null">
		and merchantId = #{merchantId,jdbcType=BIGINT}
	</if>
	<if test="status != null">
		and status <![CDATA[ < ]]> #{status,jdbcType=INTEGER}
	</if>
</update>

<update id="updateOrdersBatch" parameterType="map">
	update orders
	<set>
		<if test="state != null">
			state = #{state,jdbcType=INTEGER},
		</if>
		<if test="status != null">
			status = #{status,jdbcType=INTEGER},
		</if>
		<if test="isPaid != null">
			isPaid = #{isPaid,jdbcType=INTEGER},
		</if>
	</set>
	where state = 1 and id in
	<foreach collection="os" item="orderId" open="(" separator="," close=")">
		#{orderId,jdbcType=BIGINT}
	</foreach>
	<if test="userId != null">
		and userId = #{userId,jdbcType=BIGINT}
	</if>
	<if test="merchantId != null">
		and merchantId = #{merchantId,jdbcType=BIGINT}
	</if>
	<if test="status != null">
		and status <![CDATA[ < ]]> #{status,jdbcType=INTEGER}
	</if>
</update>

<select id="excelOrders" parameterType="map" resultType="map">
	select o.orderNum, o.state, o.status, o.orderPrice, o.productPrice, o.discountPrice, o.isPaid, o.createtime,
    o.provinceName, o.cityName, o.areaName, o.remark, o.consignee, o.mobile, op.name as payname, od.buyPrice, od.number, od.sku, g.gname, cg.cgname
	from orders o left join odetail od on o.id = od.orderId
	left join opaytype op on o.id = op.orderId
	left join cgoods cg on od.cgoodsId = cg.id
	left join goods g on cg.gid = g.id
	where o.merchantId = #{merchantId,jdbcType=BIGINT} 
	<if test="state != null">
		and o.state = #{state,jdbcType=INTEGER}
	</if>
	<if test="status != null">
		and o.status = #{status,jdbcType=INTEGER}
	</if>
	<if test="isPaid != null">
		and o.isPaid = #{isPaid,jdbcType=INTEGER}
	</if>
	and o.createtime between #{sdate,jdbcType=TIMESTAMP} and #{edate,jdbcType=TIMESTAMP}
</select>

</mapper>