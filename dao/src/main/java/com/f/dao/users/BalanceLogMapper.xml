<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.f.dao.users.BalanceLogMapper" >
  <resultMap id="BaseResultMap" type="com.f.dto.users.BalanceLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="userId" property="userId" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="platform" property="platform" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="afterBalance" property="afterBalance" jdbcType="DECIMAL" />
    <result column="operName" property="operName" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userId, type, platform, money, afterBalance, operName, createtime, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.f.dto.users.BalanceLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from balancelog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from balancelog
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.f.dto.users.BalanceLog" >
    insert into balancelog (id, userId, type, 
      platform, money, afterBalance, 
      operName, createtime, remark
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, 
      #{platform,jdbcType=INTEGER}, #{money,jdbcType=DECIMAL}, #{afterBalance,jdbcType=DECIMAL}, 
      #{operName,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.f.dto.users.BalanceLog" >
    insert into balancelog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        userId,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="platform != null" >
        platform,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="afterBalance != null" >
        afterBalance,
      </if>
      <if test="operName != null" >
        operName,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="platform != null" >
        #{platform,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="afterBalance != null" >
        #{afterBalance,jdbcType=DECIMAL},
      </if>
      <if test="operName != null" >
        #{operName,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.f.dto.users.BalanceLogExample" resultType="java.lang.Integer" >
    select count(*) from balancelog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update balancelog
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        userId = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.platform != null" >
        platform = #{record.platform,jdbcType=INTEGER},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.afterBalance != null" >
        afterBalance = #{record.afterBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.operName != null" >
        operName = #{record.operName,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update balancelog
    set id = #{record.id,jdbcType=BIGINT},
      userId = #{record.userId,jdbcType=BIGINT},
      type = #{record.type,jdbcType=INTEGER},
      platform = #{record.platform,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DECIMAL},
      afterBalance = #{record.afterBalance,jdbcType=DECIMAL},
      operName = #{record.operName,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.f.dto.users.BalanceLog" >
    update balancelog
    <set >
      <if test="userId != null" >
        userId = #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="platform != null" >
        platform = #{platform,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="afterBalance != null" >
        afterBalance = #{afterBalance,jdbcType=DECIMAL},
      </if>
      <if test="operName != null" >
        operName = #{operName,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.f.dto.users.BalanceLog" >
    update balancelog
    set userId = #{userId,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER},
      platform = #{platform,jdbcType=INTEGER},
      money = #{money,jdbcType=DECIMAL},
      afterBalance = #{afterBalance,jdbcType=DECIMAL},
      operName = #{operName,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>